set default=0
set timeout=3
set timeout_style=hidden

## Bios help
if [ "$grub_platform" == "pc" ]; then
set timeout=10
set timeout_style=countdown
clear
echo Welcome to Ubuntu Core
echo
echo Booted in BIOS mode, but currently on x86 only UEFI is supported
echo
echo Please reboot in the UEFI mode
echo
echo Rebooting in ...
menuentry "reboot" {
    reboot
}
else
## EFI mode

# load only kernel_status from the bootenv
load_env --file /EFI/ubuntu/grubenv kernel_status

set cmdline="console=ttyS0 console=tty1 panic=-1"

set kernel=kernel.efi

if [ "$kernel_status" = "try" ]; then
    # a new kernel got installed
    set kernel_status="trying"
    save_env kernel_status

    # use try-kernel.efi
    set kernel=try-kernel.efi
elif [ "$kernel_status" = "trying" ]; then
    # nothing cleared the "trying snap" so the boot failed
    # we clear the mode and boot normally
    set kernel_status=""
    save_env kernel_status
elif [ -n "$kernel_status" ]; then
    # ERROR invalid kernel_status state, reset to empty
    echo "invalid kernel_status!!!"
    echo "resetting to empty"
    set kernel_status=""
    save_env kernel_status
fi

if [ -e $prefix/$kernel ]; then
menuentry "Run Ubuntu Core 20" {
    # use $prefix because the symlink manipulation at runtime for kernel snap 
    # upgrades, etc. should only need the /boot/grub/ directory, not the 
    # /EFI/ubuntu/ directory
    chainloader $prefix/$kernel snapd_recovery_mode=run $cmdline
}
else
    # nothing to boot :-/
    echo "missing kernel at $prefix/$kernel!"
## End of EFI
fi
