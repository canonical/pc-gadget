name: pc
version: '24-0.1'
type: gadget
base: core24
build-base: devel
summary: PC gadget for generic devices
description: |
    This gadget enables generic pc devices to work with Ubuntu Core
confinement: strict
grade: devel
icon: icon.png

#package-repositories:
# - type: apt
#   ppa: ucdev/uc-staging-ppa
#   priority: always

hooks:
  prepare-device:
    environment:
      # If you are forking and building your own gadget:
      # define your model's API key here
      # See https://ubuntu.com/core/services/guide/serial-vault-overview
      # for instructions on how to generate an API key
      # DO NOT check this API key into a publicly accessible VCS
      MODEL_APIKEY: ""

# Min version to support shim 15.7
assumes:
  - snapd2.59.3

parts:
  mbr:
    source: legacy-bios
    plugin: make
    override-build: |
      if [ "${CRAFT_ARCH_BUILD_FOR}" != amd64 ]; then
          exit
      fi
      craftctl default
  boot-assets:
    plugin: nil
    build-packages:
      - sbsigntool
      - wget
      - attr
    stage-packages:
      - grub-efi-$CRAFT_ARCH_BUILD_FOR-signed
    build-environment:
      - shim_signed_version: 1.56+15.7-0ubuntu1
    override-pull: |
      craftctl default

      # TODO: get shim as a stage package and add snapd 2.63 as requirement
      case "${CRAFT_ARCH_BUILD_FOR}" in
        amd64)
          wget "http://archive.ubuntu.com/ubuntu/pool/main/s/shim-signed/shim-signed_${shim_signed_version}_amd64.deb"
          sha256sum -c <<EOF
      b2d84b300e68ac2139afee3f9a609857ef80f12eed9218087ced4b31ecb7fd76  shim-signed_${shim_signed_version}_amd64.deb
      EOF
          ;;
        arm64)
          wget "http://ports.ubuntu.com/pool/main/s/shim-signed/shim-signed_${shim_signed_version}_arm64.deb"
          sha256sum -c <<EOF
      375de6dd3a0419ed7ecd6465f2366ff5312e58c9ee7d67959ac57f59c81a0706  shim-signed_${shim_signed_version}_arm64.deb
      EOF
          ;;
      esac
      dpkg-deb -x "shim-signed_${shim_signed_version}_${CRAFT_ARCH_BUILD_FOR}.deb" "shim-signed_${shim_signed_version}/"
      # to generate the manifest correctly
      find "shim-signed_${shim_signed_version}/" -exec setfattr -n user.craft_parts.origin_stage_package -v "shim-signed=${shim_signed_version}" -h {} ";"

    override-build: |
      set -x

      # Set some variables that depend on the architecture
      grub_target=x86_64
      grub_bin=grubx64.efi.signed
      shim_bin=shimx64.efi.dualsigned
      if [ "${CRAFT_ARCH_BUILD_FOR}" = arm64 ]; then
          grub_target=arm64
          grub_bin=grubaa64.efi.signed
          shim_bin=shimaa64.efi.dualsigned
      fi

      # Make sure we have have the right signatures
      shim_path="shim-signed_${shim_signed_version}/usr/lib/shim/$shim_bin"
      grub_path="${CRAFT_PART_INSTALL}"/usr/lib/grub/"$grub_target"-efi-signed/$grub_bin
      sbverify --list "$shim_path" | grep -E 'Canonical Ltd. Secure Boot Signing \(2022 v1\)'
      sbverify --list "$grub_path" | grep -E 'Canonical Ltd. Secure Boot Signing \(2022 v1\)'

      # Move shim/grub to the expected path
      cp -a "$shim_path" "${CRAFT_PART_INSTALL}"/shim.efi.signed
      install -m 644 "$grub_path" "${CRAFT_PART_INSTALL}"/${grub_bin%.signed}

      mkdir -p "${CRAFT_PART_INSTALL}/usr/share/doc/shim-signed"
      cp -arT "shim-signed_${shim_signed_version}/usr/share/doc/shim-signed" "${CRAFT_PART_INSTALL}/usr/share/doc/shim-signed"

      # Remove all the bits we do not need, keeping changelogs and copyrights
      # (using organize/prime is not possible due to different names per arch - x64/aa64)
      find "${CRAFT_PART_INSTALL}"/ -type f,l \
                -not -path "${CRAFT_PART_INSTALL}"/shim.efi.signed \
                -not -path "${CRAFT_PART_INSTALL}"/${grub_bin%.signed} \
                -not -path "${CRAFT_PART_INSTALL}"/usr/share/doc/grub-efi-${CRAFT_ARCH_BUILD_FOR}-signed/'*' \
           -and -not -path "${CRAFT_PART_INSTALL}"/'usr/share/doc/shim-signed/*' \
           -delete
      find "${CRAFT_PART_INSTALL}"/ -type d -empty -delete

      # grub.conf lets snapd identify grub as the bootloader on boot
      install -m 644 /dev/null "${CRAFT_PART_INSTALL}"/grub.conf
  gadget:
    plugin: nil
    source: gadget
    override-build:
      # We need to install directly in the project dir as snapcraft checks there
      # for gadget.yaml instead of looking first at the prime folder.
      install -m 644 gadget-"${CRAFT_ARCH_BUILD_FOR}".yaml "${CRAFT_PROJECT_DIR}"/gadget.yaml
